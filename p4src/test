  //mpls header add methods are in include/mpls_extension.p4
    /* ******************* ipv4 Forward && Mpls header ******************* */
    table FEC_tbl {
        key = {
            hdr.ipv4.dstAddr: lpm;
            hdr.ipv4.srcAddr: exact;
        }
        actions = {
            ipv4_forward;
            mpls_ingress_1_hop;
            mpls_ingress_2_hop;
            mpls_ingress_3_hop;
            mpls_ingress_4_hop;
            mpls_ingress_5_hop;
            mpls_ingress_6_hop;
            mpls_ingress_7_hop;
            mpls_ingress_8_hop;
            drop;
        }
        default_action = drop;
        size = TABLE_SIZE;
    }

    /* ******************* Mpls forward ******************* */
    table mpls_tbl {
        key = {
            hdr.mpls[0].label: exact;
            hdr.mpls[0].s: exact;
        }
        actions = {
            mpls_forward;
            penultimate;
            NoAction;
        }
        default_action = NoAction;
        size = TABLE_SIZE;
    }

    /* ******************* MPLS function ******************* */
    tabel mpls_nfc {
        key = {
            hdr.mpls[0].label: exact;
        }
        actions = {
            ecmp_group;
            bloom_filter;
            NoAction;

        }
        size = TABLE_SIZE;
        default_action = NoAction;  
    }



    /* ******************* IPv4 Load Balance ******************** */
    table ecmp_group_to_forward {
        key = {
            meta.ecmp_group_id: exact;
            meta.ecmp_hash: exact;
        }
        actions = {
            ipv4_forward;
            drop;
        }
        default_action = drop;
        size = TABLE_SIZE;
    }

    /* ******************* IPv4 FireWall ******************** */
    table check_ports {
        key = {
            standard_metadata.ingress_port: exact;
            standard_metadata.egress_spec: exact;
        }
        actions = {
            set_direction;
            NoAction;
        }
        size = TABLE_SIZE;
        default_action = NoAction;
    }
    apply {

        // //forward or add mpls header
        // if (hdr.ipv4.isValid()) {
        //     FEC_tbl.apply();
        //     direction = 0; // default
        // }
        // if (hdr.mpls[0].isValid()) {
        //     mpls_tbl.apply();
        // }
        
        // check_ports.apply();
        // //Network Service basd on mpls label
        // if (hdr.mpls[0].isValid()) {
        //     switch (mpls_nfc.apply().action_run) {  
        //         //Load Balance
        //         ecmp_group: { ecmp_group_to_forward.apply(); }
        //         // //FirwWall
        //         // bloom_filter: {} 
        //     }
        // }
        
    }   